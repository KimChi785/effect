<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Magical Solar</title>
   
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
        integrity="sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        body{
    background: #000;
    overflow: hidden;
    padding: 0;
    margin: 0;
    font-family: "Segoe Ui", sans-serif;
    color: white;
}

.stars{
    position: absolute;
    width: 100%;
    height: 100%;
    background: transparent;
    z-index: -1;
}

.star {
    position: absolute;
    background: white;
    border-radius: 50%;
    width: 2px;
    height: 2px;
    opacity: 0.5;
    animation: twinkle 2s infinite ease-in-out;
}

@keyframes twinkle {
    0%, 100% { opacity: 0.2;  }
    50% {opacity: 1;}
}

.sun {
    background: #fff;
    border-radius: 50%;
    box-shadow: inset 0 0 90px rgba(251, 172, 19, 0.4), 0 0 50px 10px rgba(251, 174, 19, 0.5), 0 0 120px 20px rgba(255, 255, 255, 0.6), 0 0 20px 10px rgba(255, 255, 255, 0.9);
    width: 200px;
    height: 200px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 0;
    animation: sunAppear 2s ease-in forwards;
}

@keyframes sunAppear {
    0% { opacity: 0; transform: translate(-50%, -50%) scale(0.8); }
    100% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}

.moon {
    background: #111;
    border-radius: 50%;
    box-shadow: inset -5px 0 20px rgba(251, 172, 19, 0.6), inset 0 0 10px rgba(255, 255, 255, 0.7);
    height: 195px;
    width: 195px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation: eclipse 6s ease-in-out forwards;
    z-index: 2;
}

@keyframes eclipse {
    0% { transform: translate(-50%, -50%) translateX(0); }
    100% { transform: translate(-50%, -50%) translateX(-100px); }
}


.corona {
    background: transparent;
    border-radius: 50%;
    box-shadow: 0 0 40px 20px white, 0 0 60px 30px rgba(251, 172, 19, 0.5);
    height: 80px;
    width: 40px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(calc(-50% + 90px), -50%);
    z-index: 3;
    animation: coronaPulse 2s infinite ease-in-out forwards;
}

@keyframes coronaPulse {
    0% { box-shadow: 0 0 40px 20px white, 0 0 60px 30px rgba(251, 172, 19, 0.5); }
    50% { box-shadow: 0 0 60px 30px white, 0 0 80px 40px rgba(251, 172, 19, 0.8);}
    100% { box-shadow: 0 0 40px 20px white, 0 0 60px 30px rgba(251, 172, 19, 0.5);}
}

.corona::before, .corona:after {
    content: "";
    position: absolute;
    background: linear-gradient(to right, rgba(0, 0, 0, 0)0%, white 50%, rgba(0, 0, 0, 0) 100%);
    height: 3px;
    opacity: 0.3;
}

.corona::before {
    left: -100px;
    top: 45px;
    width: 300px;
    transform: rotate(40deg);
}

.corona:after {
    left: -225px;
    top: 45px;
    width: 500px;
    opacity: 0.2;
    transform: rotate(-80deg);
}

.time-display {
    position: absolute;
    top: 20px;
    left: 20px;
    font-size: 1.2rem;
    color: #ccc;
    z-index: 10;
}

.shooting-star {
    position: absolute;
    width: 2px;
    height: 80px;
    background: white;
    opacity: 0.5;
    transform: rotate(45deg);
    animation: shoot 1s linear forwards;
}

@keyframes shoot {
    0%{ 
        top: 0;
        left: 100%;
        opacity: 0.7;
    }
    100%{
        top: 100%;
        left: -100px;
        opacity: 0;
    }
}

.description {
    position: absolute;
    bottom: 20px;
    width: 100%;
    text-align: center;
    font-size: 1.2rem;
    color: #eee;
    z-index: 5;
    animation: fadeIn 4s ease-in forwards;
    opacity: 0;
}

@keyframes fadeIn {
    to { opacity: 1;}
 }

 /* special shooting stars */
 .shooting-star-name {
    position: absolute;
    display: flex;
    align-items: center;
    animation: shootSpecial 2s linear forwards;
    z-index: 20;
 }

 @keyframes shootSpecial {
    0% {
        top: 10%;
        left: 110%;
        opacity: 1;
    }
    100% {
        top: 90%;
        left: -100px;
        opacity: 0;
    }
 }

 .shooting-star-name .trail {
    width: 2px;
    height: 80px;
    background: #fff;
    opacity: 1;
    transform: rotate(45deg);
    margin-right: 10px;
    box-shadow: 0 0 10px white, 0 0 20px #ff8, 0 0 30px #f90;
 }

.name-orbit-wrapper {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 300px;
  height: 300px;
  margin-left: -150px;
  margin-top: -150px;
  animation: orbit 12s linear infinite;
  z-index: 4;
  pointer-events: none;
}

.name-orbit {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  font-size: 1.5rem;
  font-weight: bold;
  color: #fff;
  text-shadow: 0 0 8px #fff, 0 0 15px #f0f, 0 0 25px #f0f;
  animation: flicker 2s infinite ease-in-out;
}

@keyframes orbit {
  from { transform: rotate(0deg); }
  to   { transform: rotate(360deg); }
}

@keyframes flicker {
  0%, 100% { opacity: 0.9; }
  50% { opacity: 0.6; }
}

.spark {
  position: absolute;
  width: 4px;
  height: 4px;
  background: white;
  border-radius: 50%;
  opacity: 0.9;
  box-shadow: 0 0 10px white;
  animation: sparkMove 0.8s ease-out forwards;
  z-index: 999;
}

@keyframes sparkMove {
  0% { transform: translate(0, 0) scale(1); opacity: 1; }
  100% {
    transform: translate(var(--dx), var(--dy)) scale(0.5);
    opacity: 0;
  }
}
</style>
</head>

<body>
    <div class="stars" id="stars"></div>
    <div class="sun"></div>
    <div class="moon"></div>
    <div class="corona"></div>
    <div class="name-orbit-wrapper">
        <div class="name-orbit" id="clickable-name">Philip</div>
    </div>
    <div class="time-display" id="timeDisplay"></div>
    <div class="description">Rảnh nên làm cho gấu coi vui vui ạaaa <i class="fas fa-heart"></i> </div>
    <audio id="eclipseSound" src="https://www.soundjay.com/nature/sounds/wind-blowing-01.mp3" preload="auto"></audio>

    <script>

        // show real-time clock
        const updateTime = () => {
            const now = new Date();
            const display = document.getElementById("timeDisplay");
            display.textContent = "Eclipse Time: " + now.toLocaleTimeString();
        };
        setInterval(updateTime, 1000);
        updateTime();

        // play sound when the moon covers the sun
        window.onload = () => {
            const sound = document.getElementById("eclipseSound");
            sound.play();
        }

        //shooting stars animation
        setInterval(() => {
            const star = document.createElement("div");
            star.className = "shooting-star";
            star.style.left = Math.random() * window.innerWidth + "px";
            document.body.appendChild(star);
            setTimeout(() => star.remove(), 4000);
        }, 2000);

        // star Special
        setInterval(() => {

            const specialStar = document.createElement("div");
            specialStar.className = "shooting-star-name";
            specialStar.style.top = Math.random() * 80 + "%";

            specialStar.innerHTML = `
                <div class="trail"></div>
                <div class="name">Philip</div>
            `;

            document.body.appendChild(specialStar);
            setTimeout(() => specialStar.remove(), 5000);
        }, 5000);
        //twinkling stars
        const starsContainer = document.getElementById("stars");
        for (let i = 0; i < 100; i++) {
            const star = document.createElement("div");
            star.className = "star";
            star.style.top = Math.random() * 100 + "%";
            star.style.left = Math.random() * 100 + "%";
            star.style.animationDuration = (Math.random() * 2 + 1) + "s";
            starsContainer.appendChild(star);
        }

        const name = document.getElementById("clickable-name");
        name.addEventListener("click", (e) => {
            const count = 15;
            const rect = e.target.getBoundingClientRect();
            const originX = rect.left + rect.width / 2;
            const originY = rect.top + rect.height / 2;

            for (let i = 0; i < count; i++) {
                const spark = document.createElement('div');
                spark.className = "spark";

                const angle = Math.random() * 2 * Math.PI;
                const distance = 80 + Math.random() * 40;
                const dx = Math.cos(angle) * distance + 'px';
                const dy = Math.sin(angle) * distance + 'px';

                spark.style.left = originX + 'px';
                spark.style.top = originY + 'px';
                spark.style.setProperty('--dx', dx);
                spark.style.setProperty('--dy', dy);

                document.body.appendChild(spark);
                setTimeout(() => spark.remove(), 1000);
            }

            // Optional: play sound
            const pop = new Audio("https://www.soundjay.com/button/sounds/button-16.mp3");
            pop.volume = 0.2;
            pop.play();
        });
    </script>
</body>

</html>
